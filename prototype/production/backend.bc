import project
import vpc

import frontend

aws.security-group backend
    vpc-id: @(aws.vpc vpc.vpc | vpc-id)

    for port in [3306, 8180]:
        add ingress
            from-port: $(port)
            to-port: $(port)
            protocol: tcp
            security-groups: #(aws.security-group frontend.frontend | security-group-id)
        end
    end
end

aws.iam-role backend
    name: $(project.NAME)-$(ENVIRONMENT)-$(project.SERIAL)-backend
end

aws.iam-role-policy production-backend-s3
    role-name: @(aws.iam-role backend.nameend
    name: production-backend-s3
    path: roles/production-backend-s3.json
end

aws.iam-instance-profile backend
    name: @(aws.iam-role-policy production-backend-s3 | role-name)
end

for zone-resource in #(aws.subnet vpc.private):
    type: backend
    zone: @(aws.subnet zone-resource | availability-zone)
    if @(aws.subnet zone-resource) == #(aws.subnet vpc.master):
        type: master
    end

    aws.instance $(type)-$(zone)
        image: ami-04aaab62bebf49db8
        instance-type: t2.medium
        iam-instance-profile: @(aws.iam-instance-profile backend | name)
        security-group-ids: #(aws.security-group backend project.operation | security-group-id)
        subnet-id: @(aws.subnet zone-resource | subnet-id)
        key-pair: @(aws.key-pair project.key-pair | name)

        tags:
            Project: $(project.NAME)
            beam.project: $(project.NAME)
            beam.serial: $(project.SERIAL)
            beam.environment: $(ENVIRONMENT)
            beam.layer: $(type)
    end
end
