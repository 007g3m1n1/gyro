import project
import network.*
import brightspot.*

ENVIRONMENT: production

resource brightspot.frontend layer:
    project-name: @(project.NAME)
    environment: production
    serial: @(project.SERIAL)
    subdomain: @(project.SUBDOMAIN)

    vpc: @(aws.vpc vpc.vpc)
    key-pair: @(aws.key-pair project.key-pair)
    hosted-zone: @(aws.hosted-zone route53.public)

    elb-subnets: @(aws.subnet vpc.public)
    frontend-subnets: @(aws.subnet vpc.private)
end

workflow brightspot.deploy deployment:
    elb: @(aws.elb layer.elb)
    hosted-zone: @(aws.hosted-zone hosted-zone)
    autoscale-group: @(aws.autoscale-group layer.autoscale-group)
    launch-configuration: @(aws.launch-configuration layer.launch-configuration)
end

// Defining scaling policies outside of the virtual resource to show
// how interaction with resources defined by the virtual resource can
// be referenced.

resource aws.autoscaling-policy high-cpu-scale-up:
    name: high-cpu-scale-up
    autoscale-group-name: @(aws.autoscaling-group web.frontend | autoscale-group-name)
    adjustment-type: ChangeInCapacity
    scaling-adjustment: 4
    cool-down: 120
end

resource aws.cloudwatch-metric-alarm frontend-autoscaling-cpu-high:
    name: @(aws.autoscaling-policy high-cpu-scale-up | name)
    metric-name: CPUUtilization
    namespace: AWS/EC2
    evaluation-periods: 1
    period: 60
    threshold: 60
    statistic: Average
    comparison-operator: GreaterThanThreshold

    dimensions:
        AutoScalingGroupName: @(aws.autoscaling-group frontend | autoscale-group-name)
    end

    alarm-actions: [@(aws.autoscaling-policy high-cpu-scale-up | arn)]
end

resource aws.autoscaling-policy high-cpu-scale-down:
    name: high-cpu-scale-down
    autoscale-group-name: @(aws.autoscaling-group web.frontend | autoscale-group-name)
    adjustment-type: ChangeInCapacity
    scaling-adjustment: -4
    cool-down: 300
end

resource aws.cloudwatch-metric-alarm frontend-autoscaling-cpu-low:
    name: @(aws.autoscaling-policy high-cpu-scale-down | name)
    metric-name: CPUUtilization
    namespace: AWS/EC2
    evaluation-periods: 1
    period: 300
    threshold: 20
    statistic: Average
    comparison-operator: LessThanThreshold

    dimensions:
        AutoScalingGroupName: @(aws.autoscaling-group web.frontend | autoscale-group-name)
    end

    alarm-actions: [@(aws.autoscaling-policy high-cpu-scale-down | arn)]
end

