virtual_resource
    project-name
    environment
    serial
    subdomain
    vpc
    key-pair
    hosted-zone
    elb-subnets
    frontend-subnets
define
    aws.security-group elb
        vpc-id: @(aws.vpc vpc | vpc-id)

        for port in [80, 443]:
            add ingress
                from-port: $(port)
                to-port: $(port)
                protocol: tcp
                cidr-block: 0.0.0.0/0
            end
        end
    end

    aws.elastic-load-balancer elb
        name: $(project-name)-web-$(serial)

        for load-balancer-port, instance-port, instance-protocol in [80, 80, http, 443, 80, https]:
            add listener
                load-balancer-port: $(load-balancer-port)
                instance-protocol: $(instance-protocol)
                instance-port: $(instance-port)
            end
        end

        add health-check
            protocol: http
            port: 80
            path: /_ping
            timeout: 5
            interval: 6
            unhealthy-threshold: 2
            healthy-threshold: 2
        end

        subnets: #(aws.subnet elb-subnets | subnet-id)
        security-groups-ids: [@(aws.security-group elb | security-group-ids)]
    end

    aws.hosted-zone-record prod.$subdomainend
        zone-id: @(aws.hosted-zone hosted-zone | zone-id)
        name: prod.$(subdomain)
        type: CNAME
        ttl: 300
        records: [@(aws.elastic-load-balancer web | canonical-hosted-zone-name)]
    end

    aws.security-group security-group
        vpc-id: @(aws.vpc vpc | vpc-id)

        for port in [80, 22, 8080]:
            add ingress
                from-port: $(port)
                to-port: $(port)
                protocol: tcp
                security-groups: [@(aws.security-group elb | security-group-id)]
            end
        end
    end

    aws.launch-configuration launch-configuration
        name: $(project-name) frontend $(environment) v$(serial)

        image: ami-0ddcc69ab30ed9c03
        instance-type: t2.medium
        key-pair: @(aws.key-pair key-pair | name)

        security-groups: [@(aws.security-group frontend | security-group-id)]
    end

    aws.autoscaling-group autoscaling-group
        autoscale-group-name: @(aws.launch-configuration frontend | name)
        launch-configuration-name: @(aws.launch-configuration frontend | name)
        load-balancer-names: [@(aws.elastic-load-balancer web | name)]
        vpc-zone-identitiers: #(aws.subnet frontend-subnets | subnet-id)
        default-cool-down: 300
        health-check-type: ec2

        minSize: 4
        maxSize: 8

        tags: $(project.defaultTags)
    end
end
