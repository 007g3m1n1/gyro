import "../project.beam" as project 
import "../vpc.beam" as vpc
import "../route53.beam" as route53

import "frontend.beam" as frontend
import "backend.beam" as backend

ENVIRONMENT = "production"

aws::security_group $security-group {
    vpcId: ${vpc.vpc.vpcId}
        
    ingress {
        fromPort: 0
        toPort: 0
        protocol: "-1"

        securityGroups: [
            ${frontend.security-group},
            ${backend.security-group}
        ] 
    }

    # OpenVPN
    ingress {
        fromPort: 1194
        toPort: 1194
        protocol: "udp"
        cidrBlock: "0.0.0.0/0"
    }

    # Office & VPN IPs
    ingress {
        fromPort: 22
        toPort: 22
        protocol: "tcp"
        cidrBlock: "52.5.144.128/32"
    }
}

aws::iam_role $gateway-role {
    name: "${project.NAME}-${ENVIRONMENT}-${project.SERIAL}-gateway"
}

aws::iam_role_policy $gateway-beam-server-readonly-policy {
    roleName: ${gateway-role.name}"
    name: "beam-server-readonly"
    path: "roles/beam-server-readonly.json"
}

aws::iam_instance_profile gateway-instance-role {
    name: ${gateway-beam-server-readonly-policy.name}
}

aws::instance $us-east-1a {
    image: "ami-04aaab62bebf49db8"
    instanceType: "t2.medium"
    privateIp: "10.0.0.10"
    associatePublicIpAddress: true
    sourceDestCheck: false
    iamInstanceProfile: ${gateway-instance-role.name}
    securityGroupIds: [${security-group.id}, ${project.operation-security-group.id}]
    subnetId: ${vpc.public-us-east-1a.subnetId}
    keyPair: ${project.project-key-pair}

    tags: {
        Project: "${project.NAME}"
        Serial: "${project.SERIAL}"
        beam.environment: "${ENVIRONMENT}"
    }
}

aws::instance $us-east-1b {
    image: "ami-04aaab62bebf49db8"
    instanceType: "t2.medium"
    privateIp: "10.0.1.10"
    associatePublicIpAddress: true
    sourceDestCheck: false
    iamInstanceProfile: ${gateway-instance-role.name}
    securityGroupIds: [${security-group.id}, ${project.operation-security-group.id}]
    subnetId: ${vpc.public-us-east-1b.subnetId}
    keyPair: ${project.project-key-pair}

    tags: {
        Project: "${project.NAME}"
        Serial: "${project.SERIAL}"
        beam.environment: "${ENVIRONMENT}"
    }
}

aws::instance $us-east-1c {
    image: ami-04aaab62bebf49db8
    instanceType: t2.medium
    privateIp: 10.0.2.10
    associatePublicIpAddress: true
    sourceDestCheck: false
    iamInstanceProfile: ${gateway-instance-role.name}
    securityGroupIds: [${security-group.id}, ${project.operation-security-group.id}]
    subnetId: ${vpc.public-us-east-1c.subnetId}
    keyPair: ${project.project-key-pair}

    tags: {
        Project: "${project.name}"
        Serial: "${project.serial}"
        beam.environment: "${ENVIRONMENT}"
    }
}

aws::hosted_zone_record "vpn.${project.SUBDOMAIN}" {
    zoneId: ${route53.public.zoneId}
    name: "vpn.${project.SUBDOMAIN}"
    type: "A"
    ttl: 300
    records: [
        ${us-east-1a.publicIpAddress},
        ${us-east-1b.publicIpAddress},
        ${us-east-1c.publicIpAddress}
    ]
}
