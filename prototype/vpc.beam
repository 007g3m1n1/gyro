import "project.beam" as project
import "production/gateway.beam" as gateway

AWS::Vpc "vpc" {
    name: "beam enterprise"
    cidrBlock: "10.0.0.0/16"
    enableDnsSupport: true
    enableDnsHostnames: true

    tags: ${project.DEFAULT_TAGS}
}

AWS::InternetGateway "igw" {
    vpcId: @(AWS::Vpc vpc.vpcId)
    name: "beam enterprise"
    tags: ${project.DEFAULT_TAGS}
}

// US-EAST-1 - Zone A

AWS::Subnet "public-us-east-1a" tags "public" {
    name: "${project.NAME} [public, public-us-east, public-us-east-1a]"
    
    vpcId: @(AWS::Vpc vpc.vpcId)
    cidrBlock: "10.0.0.0/26"
    availabilityZone: "us-east-1a"
    assignPublicIPv4Address: true

    tags: ${project.DEFAULT_TAGS}
}

AWS::Subnet "private-us-east-1a" tags "private" {
    name: "${project.NAME} [private, private-us-east, private-us-east-1a]"
    
    vpcId: @(AWS::Vpc vpc.vpcId)
    cidrBlock: "10.0.0.128/25"
    availabilityZone: "us-east-1a"
    assignPublicIPv4Address: no

    tags: ${project.DEFAULT_TAGS}
}

AWS::Subnet "development" {
    name: "${project.NAME} [development]
    
    vpcId: @(AWS::Vpc vpc.vpcId)
    cidrBlock: "10.0.0.64/26"
    availabilityZone: "us-east-1a"
    assignPublicIPv4Address: no

    tags: ${project.DEFAULT_TAGS}
}

AWS::RouteTable "public-us-east-1a" {
    name: "${project.NAME} public, us-east-1a"
        
    vpcId: @(AWS::Vpc vpc.vpcId)

    associate_subnet {
        subnetId: @(AWS::Subet public-us-east-1a.subnetId)
    }

    associate_subnet {
        subnetId: @(AWS::Subnet public-us-east-1b.subnetId)
    }
}

AWS::Route "public-us-east-1a" {
    routeTableId: @(AWS::RouteTable public-us-east-1a)
    cidrBlock: "0.0.0.0/0"
    gatewayId: @(AWS::InternetGateway igw.gatewayId)
}

AWS::RouteTable "private-us-east-1a" {
    name: "${project.NAME} private, us-east-1a"
        
    vpcId: @(AWS::Vpc vpc.vpcId)
}

AWS::Route "private-us-east-1a" {
    routeTableId: @(AWS::RouteTable private-us-east-1a)
    cidrBlock: "0.0.0.0/0"
    instanceId: @(AWS::Instance gateway.us-east-1a.instanceId)
}

// US-EAST-1 - Zone B

AWS::Subnet "public-us-east-1b" tags "public" {
    name: "beam enterprise [public, public-us-east, public-us-east-1b]"
    
    vpcId: @(AWS::Vpc vpc.vpcId)
    cidrBlock: "10.0.1.0/26"
    availabilityZone: "us-east-1b"
    assignPublicIPv4Address: true

    tags: ${DEFAULT_TAGS}
}

AWS::Subnet "private-us-east-1b" tags "private" {
    name: "beam enterprise [private, private-us-east, private-us-east-1b]"
    
    vpcId: @(AWS::Vpc vpc.vpcId)
    cidrBlock: "10.0.1.128/25"
    availabilityZone: "us-east-1b"
    assignPublicIPv4Address: no

    tags: ${project.DEFAULT_TAGS}
}

AWS::RouteTable "private-us-east-1b" {
    name: "${project.project} private, us-east-1b"
        
    vpcId: @(AWS::Vpc vpc.vpcId)
}

AWS::Route "private-us-east-1b" {
    routeTableId: @(AWS::RouteTable private-us-east-1b)
    cidrBlock: "0.0.0.0/0"
    instanceId: @(AWS::Instance gateway.us-east-1b.instanceId)
}

// US-EAST-1 - Zone C

AWS::Subnet "public-us-east-1c" tags "public" {
    name: "beam enterprise [public, public-us-east, public-us-east-1c]"
    
    vpcId: @(AWS::Vpc vpc.vpcId)
    cidrBlock: "10.0.2.0/26"
    availabilityZone: "us-east-1c"
    assignPublicIPv4Address: true

    tags: ${project.DEFAULT_TAGS}
}

AWS::Subnet "private-us-east-1c" tags "master" "private" {
    name: "beam enterprise [private, private-us-east, private-us-east-1c]"
    
    vpcId: @(AWS::Vpc vpc.vpcId)
    cidrBlock: "10.0.2.128/25"
    availabilityZone: "us-east-1c"
    assignPublicIPv4Address: no

    tags: ${project.DEFAULT_TAGS}
}

AWS::RouteTable "private-us-east-1c" {
    name: "${project.project} private, us-east-1c"
        
    vpcId: @(AWS::Vpc vpc.vpcId)
}

AWS::Route "private-us-east-1c" {
    routeTableId: @(AWS::RouteTable private-us-east-1c)
    cidrBlock: "0.0.0.0/0"
    instanceId: @(AWS::Instance gateway.us-east-1c.instanceId)
}
