import "project.beam" as project
import "production/gateway.beam" as gateway

aws::vpc "vpc" {
    name: "beam enterprise"
    cidrBlock: "10.0.0.0/16"
    enableDnsSupport: true
    enableDnsHostnames: true

    tags: ${project.DEFAULT_TAGS}
}

aws::internet_gateway "igw" {
    vpcId: ${vpc.vpcId}
    name: "beam enterprise"
    tags: ${project.DEFAULT_TAGS}
}

## US-EAST-1 - Zone A

aws::subnet "public-us-east-1a" tags "public" {
    name: "${project.project} [public, public-us-east, public-us-east-1a]"
    
    vpcId: ${vpc.vpcId}
    cidrBlock: "10.0.0.0/26"
    availabilityZone: "us-east-1a"
    assignPublicIPv4Address: true

    tags: ${project.DEFAULT_TAGS}
}

aws::subnet "private-us-east-1a" tags "private" {
    name: "${project.project} [private, private-us-east, private-us-east-1a]"
    
    vpcId: ${vpc.vpcId}
    cidrBlock: "10.0.0.128/25"
    availabilityZone: "us-east-1a"
    assignPublicIPv4Address: no

    tags: ${project.DEFAULT_TAGS}
}

aws::subnet "development" {
    name: "${project.project} [development]
    
    vpcId: ${vpc.vpcId}
    cidrBlock: "10.0.0.64/26"
    availabilityZone: "us-east-1a"
    assignPublicIPv4Address: no

    tags: ${project.DEFAULT_TAGS}
}

aws::route_table "public-us-east-1a" {
    name: "${project.project} public, us-east-1a"
        
    vpcId: ${vpc.vpcId}

    associate_subnet {
        subnetId: ${public-us-east-1a.subnetId}
    }

    associate_subnet {
        subnetId: ${public-us-east-1b.subnetId}
    }
}

aws::route "public-us-east-1a" {
    routeTableId: ${public-us-east-1a}
    cidrBlock: "0.0.0.0/0"
    gatewayId: ${igw.gatewayId}
}

aws::route_table "private-us-east-1a" {
    name: "${project.project} private, us-east-1a"
        
    vpcId: ${vpc.vpcId}
}

aws::route "private-us-east-1a" {
    routeTableId: ${private-us-east-1a}
    cidrBlock: "0.0.0.0/0"
    instanceId: ${gateway.us-east-1a}
}

## US-EAST-1 - Zone B

aws::subnet "public-us-east-1b" tags "public" {
    name: "beam enterprise [public, public-us-east, public-us-east-1b]"
    
    vpcId: ${vpc.vpcId}
    cidrBlock: "10.0.1.0/26"
    availabilityZone: "us-east-1b"
    assignPublicIPv4Address: true

    tags: ${DEFAULT_TAGS}
}

aws::subnet "private-us-east-1b" tags "private" {
    name: "beam enterprise [private, private-us-east, private-us-east-1b]"
    
    vpcId: ${vpc.vpcId}
    cidrBlock: "10.0.1.128/25"
    availabilityZone: "us-east-1b"
    assignPublicIPv4Address: no

    tags: ${project.DEFAULT_TAGS}
}

aws::route_table $private-us-east-1b {
    name: "${project.project} private, us-east-1b"
        
    vpcId: ${vpc.vpcId}
}

aws::route {
    routeTableId: ${private-us-east-1b}
    cidrBlock: "0.0.0.0/0"
    instanceId: ${gateway.us-east-1b}
}

## US-EAST-1 - Zone C

aws::subnet $public-us-east-1c #public {
    name: "beam enterprise [public, public-us-east, public-us-east-1c]"
    
    vpcId: ${vpc.vpcId}
    cidrBlock: "10.0.2.0/26"
    availabilityZone: "us-east-1c"
    assignPublicIPv4Address: true

    tags: ${project.DEFAULT_TAGS}
}

aws::subnet $private-us-east-1c #master #private {
    name: "beam enterprise [private, private-us-east, private-us-east-1c]"
    
    vpcId: ${vpc.vpcId}
    cidrBlock: "10.0.2.128/25"
    availabilityZone: "us-east-1c"
    assignPublicIPv4Address: no

    tags: ${project.DEFAULT_TAGS}
}

aws::route_table $private-us-east-1c {
    name: "${project.project} private, us-east-1c"
        
    vpcId: ${vpc.vpcId}
}

aws::route {
    routeTableId: ${private-us-east-1c}
    cidrBlock: "0.0.0.0/0"
    instanceId: ${gateway.us-east-1c}
}
