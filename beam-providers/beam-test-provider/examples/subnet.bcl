import init as _

workflow
    name: 'replace-network'
    trigger-type: 'test::network'
    trigger-fields: ['cidr-block']
    first-stage: 'create-temp'

    stage
        name: 'create-temp'

        create
            parser-error: 'workaround'

            test::network "$(_current)-temp"
                cidr-block: $(cidr-block)
            end
        end

        prompt: 'What next?'

        transition
            stage: 'swap'
            name: 's'
            description: 'Swap the existing network with the temporary one'
        end
    end

    stage
        name: 'swap'

        swap
            type: 'test::network'
            x: "$(_current)"
            y: "$(_current)-temp"
        end
    end
end

test::network network
    cidr-block: "10.0.0.0/16"
end

for zone, cidr in ['us-east-2a', '10.0.0.0/24', 'us-east-2b', '10.0.1.0/24']
    test::security-group "security-group-$(zone)"
        group-name: "$(project) $(environment) $(zone)"
        network-id: $(test::network network | network-id)
        description: "Allow web traffic only in CIDR - $(test::subnet "subnet-$(zone)" | cidr-block)"

        for port, type in [80, 'http', 443, 'https']
            ingress
                description: "allow inbound $(type) traffic"
                cidr-blocks: ["0.0.0.0/0"]
                protocol: "TCP"
                from-port: $(port)
                to-port: $(port)
            end
        end
    end

    test::subnet "subnet-$(zone)"
        network-id: $(test::network network | network-id)
        availability-zone: $(zone)
        cidr-block: $(cidr)
    end
end
